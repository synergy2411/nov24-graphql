type Query {
  hello: String!
  users(searchTerm: String): [User!]!
  posts(order: String): [Post!]!
  comments: [Comment!]!
}
type Mutation {
  createUser(name: String!, age: Int!): User!
  deleteUser(userId: ID!): User!
  createPost(author: ID!, data: CreatePostInput): Post!
  deletePost(postId: ID!): Post!
  createComment(text: String!, postId: ID!, creator: ID!): Comment!
  deleteComment(commentId: ID!): Comment!
}
type User {
  id: ID!
  name: String!
  age: Int!
  posts: [Post!]!
  comments: [Comment!]!
}
type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}
type Comment {
  id: ID!
  text: String!
  post: Post!
  creator: User!
}

input CreatePostInput {
  title: String!
  body: String!
}
